.box-container {
  height: 50vh;
  border: 1px solid black;
}
#box-container1 {
  display: flex;
  justify-content: center;
  align-items: center;
}
.box {
  width: 200px;
  height: 200px;
  border: 2px solid black;
  background-color: rgba(174, 238, 217, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;

  /* transition : 변환속성 애니메이션시간 */
  /* transition은 transform보다 먼저 작성 */
  transition: 1s;
  transition: transform 5s;
  transition: 5s cubic-bezier(0.52, -0.13, 0.23, 1.2);
  /* cubic 지우고 linier 작성 후 브라우저로 열어서 검사 누르고 
  보라색 물결 체크 후 변경하고 아래에 적혀 있는 cubic~을 복붙*/
}

.box:hover {
  background-color: rgba(241, 241, 115, 0.8);

  /* trnasform : 변형함수(); */
  /* scale : 지정한 크기만큼 확대/축소하는 함수 */
  transform: scale(2);
  /* rotate : 지정한 각도(deg)만큼 회전을 시키는 함수 */
  transform: rotate(30deg);
  /* skew : 지정한 각도(deg)만큼 비틀어 왜곡하는 함수 */
  transform: skew(30deg);
  /* translate: x축, y축, z축 방향으로 이동시키는 함수*/
  transform: translateX(100px);
  transform: translate(100px, 200px);
  /* 함수는 중복하여 같이도 사용 가능 */
  transform: scale(1.5) rotate(15deg);

  /* trnasform-origin : 변형의 기준점을 변경하는 속성 */
  transform-origin: left top;
  transform-origin: right bottom;
}

/* animation */
#box-container2 {
  width: 1200px;
  height: 600px;
}
.animation-box {
  box-sizing: border-box;
  width: 200px;
  height: 200px;
  border: 2px solid black;
  background: indigo;
  color: white;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  /* animation : name duration iteration-count timing-function delay direction;
    - name : 설정된 keyframe 지정
    - duration : 실행 시간 지정
    - iteration-count : 반복 횟수 지정
    - timing-function : 속도 형태 지정
    - delay : 대기 시간 지정
    - direction : 진행 형태 지정
  */
  animation: boxAni /*만든 애니메이션 이름*/ 5s /*시간*/ linear
    /*속도를 어떻게 할 것인지*/;
  animation: boxAni 5s linear 3 /*반복 횟수*/;
  animation: boxAni 5s linear infinite /* 무한히 반복 */;
  animation: boxAni 5s linear infinite alternate
    /*진행 형태 : 갔다가 되돌아오기*/;
  animation: boxAni 5s linear infinite reverse /* 반대로 동작하기 */;
  animation: boxAni 5s linear infinite alternate-reverse
    /* 반대로 동작하면서 갔다가 되돌아오기 */;
  animation: boxAni 5s linear /*forwards*/
    /* 애니메이션이 끝나는 지점에서 멈춤을 의미 */;
}
.animation-box:hover {
  animation-play-state: paused; /*마우스 올렸을 때 애니메이션 멈춤을 의미*/
  background-color: yellow;
}
/*
  @keyframs 애니메이션이름 {
    form { 시작 프레임 설정 }
    to {끝 프레임 설정}
    % {단위로 지정 가능 - 가장 많이 쓰임}
*/
@keyframes boxAni/*(애니메이션의 이름이 들어감-마음대로 지정*/ {
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(1000px, 0);
  }
  100% {
    transform: translate(1000px, 400px);
  }
}

/* 3D */
#box-container3 {
  width: 1200px;
  height: 600px;
  display: flex;
  justify-content: center;
  align-items: center;
}
#box-container3:hover .card {
  transform: rotateY(180deg);
}
.card {
  width: 200px;
  height: 200px;
  /* background-image: url("../../resources/blueberries.jpg");
  background-size: cover;
  background-position: center; */
  transform: rotateY(45deg);
  transform: perspective(400px) rotateY(45deg);
  transform: rotateY(0deg);
  transition: 3s;
  position: relative;
  transform-style: preserve-3d /*style을 3d로 바꾸기 위해 반드시 필요*/;
}
.card-item {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}
.card-item-front {
  background-image: url("../../resources/blueberries.jpg");
  background-size: cover;
  background-position: center;
  z-index: 1;
  /* backface-visibility
    - 요소가 회전하여 뒷면이 보일 경우 표시 여부를 지정하는 속성
  */
  backface-visibility: hidden; /* 기본값 : visible */
}
.card-item-back {
  background-color: cadetblue;
  display: flex; /* 텍스트 정렬 위해 */
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size: 2rem;
  color: white;
  transform: rotateY(180deg);
}
